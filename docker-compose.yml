version: '3.7'

############################
##  DEFAULT
############################
x-airflow-common:
  &airflow-common
  image: apache/airflow:2.7.3
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin@db/airflow
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin@db/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://admin:admin@db/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
  volumes:
    - ./containers-data/airflow/scripts:/opt/shared/scripts
    - ./containers-data/airflow/dags:/opt/airflow/dags
    - ./containers-data/airflow/logs:/opt/airflow/logs
    - ./containers-data/airflow/config:/opt/airflow/config
    - ./containers-data/airflow/plugins:/opt/airflow/plugins
    - ./containers-data/util:/util
  user: "${AIRFLOW_UID:-50000}:0"
  
services:
############################
##  DATA LAKE
############################
  minio:
    image: minio/minio:latest
    platform: linux/amd64
    container_name: minio
    entrypoint: sh
    command:   '-c ''mkdir -p /minio_data/raw && mkdir -p /minio_data/trusted && minio server /minio_data --console-address ":9001"'''
    ports:
      - "9050:9000"
      - "9051:9001"
    hostname: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_ACCESS_KEY: datalake
      MINIO_SECRET_KEY: datalake
    volumes:
      - ./containers-data/minio/data1:/data

############################
## STREAMING
############################
  zookeeper:
    image: fjardim/mds-kafka-zookeeper
    platform: linux/amd64
    hostname: zookeeper
    container_name: zookeeper
    ports:
       - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

############################
## INGESTAO
############################

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    platform: linux/amd64
    hostname: airflow-webserver
    command: webserver
    ports:
      - "48080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      - redis
      - db
      - airflow-scheduler
      - airflow-worker

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    platform: linux/amd64
    hostname: airflow-scheduler
    command: scheduler
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      - redis
      - db

  airflow-worker:
    <<: *airflow-common
    container_name: airflow-worker
    platform: linux/amd64
    hostname: airflow-worker
    command: celery worker
    healthcheck:
      # yamllint disable rule:line-length
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.providers.celery.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}" || celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      <<: *airflow-common-env
      # Required to handle warm shutdown of the celery workers properly
      # See https://airflow.apache.org/docs/docker-stack/entrypoint.html#signal-propagation
      DUMB_INIT_SETSID: "0"
    depends_on:
      - redis
      - db

  airflow-cli:
    <<: *airflow-common
    container_name: airflow-cli
    platform: linux/amd64
    hostname: airflow-cli
    profiles:
      - debug
    environment:
      <<: *airflow-common-env
      CONNECTION_CHECK_MAX_COUNT: "0"
    # Workaround for entrypoint issue. See: https://github.com/apache/airflow/issues/16252
    command:
      - bash
      - -c
      - airflow

  airflow-flower:
    <<: *airflow-common
    container_name: airflow-flower
    platform: linux/amd64
    hostname: airflow-flower
    command: celery flower
    profiles:
      - flower
    ports:
      - "5555:5555"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s


############################
## DATABASE
############################
  redis:
    image: redis:latest
    platform: linux/amd64
    container_name: redis
    hostname: redis
    expose:
      - 6379
    ports:
        - 6379:6379
    volumes:
      - ./containers-data/util:/util    

  presto:
    platform: linux/amd64
    image: prestodb/presto
    hostname: presto
    container_name: presto
    volumes: 
      - ./containers-data/presto/etc/catalog:/opt/presto-server/etc/catalog/
      - ./containers-data/presto/etc/catalog:/opt/presto/etc/catalog/
      - ./containers-data/presto/etc/catalog:/etc/catalog/ 
      - ./containers-data/presto/etc/hadoop:/hadoop 
      - ./containers-data/util:/util
    ports:
      - 18080:8080
    depends_on:
      - metastore

    # deploy:
    #   resources:
    #     limits:
    #       memory: 2g
    #       #cpus: '0.2'

  db:
    image: postgres
    platform: linux/amd64
    container_name: db
    hostname: db
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: admin
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200 -c wal_level=logical
    ports:
      - 15432:5432
    volumes:
      - ./containers-data/postgres/volume:/var/lib/postgresql/data
      - ./containers-data/util:/util

  adminer:
    image: adminer
    platform: linux/amd64
    container_name: adminer
    hostname: adminer
    ports:
      - 28080:8080
      
  mysql:
    image: mysql
    platform: linux/amd64
    container_name: mysql
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    # command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 13306:3306
    volumes:
      - ./containers-data/mysql/db:/var/lib/mysql
          
  metastore:
    hostname: metastore
    platform: linux/amd64
    image: fjardim/mds-hive-metastore
    # image: apache/hive:4.0.0-beta-1
    container_name: metastore
    environment:
      AWS_ACCESS_KEY_ID: datalake
      AWS_SECRET_ACCESS_KEY: datalake
      HIVE_CUSTOM_CONF_DIR: "/hive_custom_conf"
      SERVICE_NAME: metastore
      # SERVICE_OPTS: "-Dhive.metastore.uris=thrift://metastore:9083" 
      IS_RESUME: "true"
      DB_DRIVER: postgres 
      SERVICE_OPTS: "-Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://db:5432/metastore -Djavax.jdo.option.ConnectionUserName=admin -Djavax.jdo.option.ConnectionPassword=admin" 
    ports:
       - "9083:9083"
    depends_on:
        - db
    user: root
    volumes:
       - ./containers-data/hive/meta:/opt/hive/data/warehouse 
       - ./containers-data/hive/conf:/hive_custom_conf
       - ./containers-data/util:/util

############################
## VISUALIZACAO
############################

  metabase:
      image: metabase/metabase:latest
      platform: linux/amd64
      container_name: metabase
      hostname: metabase
      ports:
        - 3000:3000
      depends_on:
        - db
      environment:
        MB_DB_TYPE: postgres
        MB_DB_DBNAME: metabase
        MB_DB_PORT: 5432
        MB_DB_PASS: admin
        MB_DB_USER: admin
        MB_DB_HOST: db
        MB_PASSWORD_COMPLEXITY: "weak"
        MB_PASSWORD_LENGTH: 4
        #user user@datalab.com.br pass datalab
      volumes:
        - ./containers-data/util:/util
 
##################################################
### ANALISE E PROCESSAMENTO
##################################################
  spark-master:
    image: fjardim/mds-spark
    platform: linux/amd64
    hostname: spark-master
    container_name: spark-master
    command: 
      - /bin/sh
      - -c
      - |
        /env/start-ssh.sh
        /env/start-env.sh
        /usr/local/spark/sbin/start-master.sh
        start-notebook.sh --NotebookApp.token=''
    ports:
      - 7022:22
      - 8889:8888
      - 4040:4040
      - 4041:4041
      - 4042:4042
      - 4043:4043
      - 38080:8080
      - 7077:7077
    volumes:
      - ./containers-data/spark/work:/home/user 
      - ./containers-data/spark/env:/env 
      - ./containers-data/util:/util
      - ./containers-data/airflow/scripts:/opt/shared/scripts
    # deploy:
    #   resources:
    #     limits:
    #       memory: 8g

  spark-worker:
    image: fjardim/mds-spark
    platform: linux/amd64
    hostname: spark-worker
    container_name: spark-worker
    command: 
      - /bin/sh
      - -c
      - |
        /env/start-env.sh
        /usr/local/spark/sbin/start-worker.sh spark-master:7077
        start-notebook.sh --NotebookApp.token='' 
    #command: /usr/local/spark/sbin/start-worker.sh jupyter-spark:7077
    #environment:
    #  PYSPARK_SUBMIT_ARGS: "--packages io.delta:delta-core_2.12:2.2.0,org.apache.hadoop:hadoop-aws:3.3.1,com.amazonaws:aws-java-sdk-bundle:1.12.392"
    env_file:
      - ./containers-data/spark/env/jupyter.env
    ports:
      - 5040:4040
      - 5041:4041
      - 5042:4042
      - 5043:4043
      - 38081:8081
      - 36533:36533
    volumes:
      - ./containers-data/util:/util
      - ./containers-data/spark/env:/env 
      - ./containers-data/spark/work:/home/user 
      - ./containers-data/airflow/scripts:/opt/shared/scripts
    environment:
      SPARK_MASTER: spark-master
    depends_on:
        - spark-master
    # deploy:
    #   resources:
    #     limits:
    #       memory: 8g

##################################################
### EDA
#####

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    platform: linux/amd64
    environment:
      PGADMIN_DEFAULT_EMAIL: lab-pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin    
    ports:
      - "5433:80"
    depends_on:
      - db  

#############################
## GENERAL

  

configs:
  flags:
    file: ./containers-data/airbyte/flags.yml

networks:
  datalab:
    driver: bridge
